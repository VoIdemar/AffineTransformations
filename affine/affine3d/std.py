import basic as bt
import custom
import affine.misc as misc

matr_rotate_x_angle = lambda angle: bt.matr_rotate_x(misc.to_rad(angle))
matr_rotate_y_angle = lambda angle: bt.matr_rotate_y(misc.to_rad(angle))
matr_rotate_z_angle = lambda angle: bt.matr_rotate_z(misc.to_rad(angle))

matr_translate_x_plus = bt.matr_translate(tx=1, ty=0, tz=0)
matr_translate_x_minus = bt.matr_translate(tx=(-1), ty=0, tz=0)
matr_translate_y_plus = bt.matr_translate(tx=0, ty=1, tz=0)
matr_translate_y_minus = bt.matr_translate(tx=0, ty=(-1), tz=0)
matr_translate_z_plus = bt.matr_translate(tx=0, ty=0, tz=1)
matr_translate_z_minus = bt.matr_translate(tx=0, ty=0, tz=(-1))
matr_rotate_x_plus = matr_rotate_x_angle(1)
matr_rotate_x_minus = matr_rotate_x_angle(-1)
matr_rotate_y_plus = matr_rotate_y_angle(1)
matr_rotate_y_minus = matr_rotate_y_angle(-1)
matr_rotate_z_plus = matr_rotate_z_angle(1)
matr_rotate_z_minus = matr_rotate_z_angle(-1)
matr_scale_x2 = bt.matr_scale(kx=2, ky=2, kz=2)
matr_scale_half = bt.matr_scale(kx=0.5, ky=0.5, kz=0.5)
matr_rotate_custom_axis_plus = custom.matr_rotate_around_axis(1, 1, 0, misc.to_rad(1))
matr_rotate_custom_axis_minus = custom.matr_rotate_around_axis(1, 1, 0, misc.to_rad(-1))

translate_x_plus = lambda point: bt.translate(point, tx=1, ty=0, tz=0)
translate_x_minus = lambda point: bt.translate(point, tx=(-1), ty=0, tz=0)
translate_y_plus = lambda point: bt.translate(point, tx=0, ty=1, tz=0)
translate_y_minus = lambda point: bt.translate(point, tx=0, ty=(-1), tz=0)
translate_z_plus = lambda point: bt.translate(point, tx=0, ty=0, tz=1)
translate_z_minus = lambda point: bt.translate(point, tx=0, ty=0, tz=(-1))
rotate_x_plus = lambda point: bt.rotate_x(point, misc.to_rad(1))
rotate_x_minus = lambda point: bt.rotate_x(point, misc.to_rad(-1))
rotate_y_plus = lambda point: bt.rotate_y(point, misc.to_rad(1))
rotate_y_minus = lambda point: bt.rotate_y(point, misc.to_rad(-1))
rotate_z_plus = lambda point: bt.rotate_z(point, misc.to_rad(1))
rotate_z_minus = lambda point: bt.rotate_z(point, misc.to_rad(-1))
scale_x2 = lambda point: bt.scale(point, kx=2, ky=2, kz=2)
scale_half = lambda point: bt.scale(point, kx=0.5, ky=0.5, kz=0.5)
rotate_custom_axis_plus = lambda point: custom.rotate_around_custom_axis(point, 1, 3, 0, misc.to_rad(1))
rotate_custom_axis_minus = lambda point: custom.rotate_around_custom_axis(point, 1, 3, 0, misc.to_rad(-1))